---
- name: 'Enable and unmask ssh.socket'
  ansible.builtin.systemd:
    name: ssh.socket
    state: started
    enabled: true
    masked: false

- name: 'Enable and unmask ssh.service'
  ansible.builtin.systemd:
    name: ssh.service
    state: started
    enabled: true
    masked: false

- name: 'Make dir ssh.socket.d'
  ansible.builtin.file:
    path: /etc/systemd/system/ssh.socket.d
    state: directory
    owner: root
    group: root
    mode: '0755'
    follow: false

- name: 'Create ssh.socket.d/listen.conf'
  ansible.builtin.template:
    src: templates/listen_conf.j2
    dest: /etc/systemd/system/ssh.socket.d/listen.conf
    owner: root
    group: root
    mode: '0644'
    force: true
    backup: true
  notify: 'Restart ssh.socket'

- name: 'Update sshd_config'
  ansible.builtin.template:
    src: templates/sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0644'
    force: true
    backup: true
    validate: "sshd -t -f %s"
  notify: 'Restart ssh.socket'

- name: 'Read moduli file'
  community.general.read_csv:
    path: "{{ sshd_moduli_file }}"
    dialect: unix
    delimiter: ' '
    fieldnames:
      - timestamp
      - type
      - tests
      - trials
      - size
      - generator
      - modulus
  register: moduli

- name: 'Get min moduli size'
  ansible.builtin.set_fact:
    moduli_min: "{{ moduli.list | map(attribute='size') | sort | first }}"
    cacheable: false

- name: 'Deactivate short moduli'
  ansible.builtin.shell: >
    awk '$5 >= {{ sshd_moduli_min }}' {{ sshd_moduli_file }}
    > {{ sshd_moduli_file }}.tmp
    && mv {{ sshd_moduli_file }}.tmp {{ sshd_moduli_file }}
  when: moduli_min | int < sshd_moduli_min
  changed_when: moduli_min | int < sshd_moduli_min
  notify: 'Restart ssh.socket'
...
